module Autoflux
  module OpenAI
    type agentResponse = Hash[Symbol, untyped] & _ToJson
    type toolCall = Hash[Symbol, untyped]

    # The agent is design to use OpenAI as an agent
    class Agent
      DEFAULT_NAME: "openai"

      @client: Client
      @model: String
      @name: String
      @memory: _Memory
      @_tools: Array[_Tool]
      @options: Hash[Symbol, untyped]

      def initialize: (model: String, ?name: String, ?client: Client, ?memory: _Memory, **untyped options) -> void
      def call: (String prompt, **untyped context) -> _ToS
      def use: (toolCall call, **untyped context) -> _ToJson
      def complete: () -> agentResponse
      def tools: () -> Array[_ToJson]?
      def tool: (String name) -> _Tool?
    end
  end
end
